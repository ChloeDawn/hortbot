// Code generated by qtc from "admin_import.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

type AdminImportPage struct {
	BasePage
}

func (p *AdminImportPage) StreamPageTitle(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
`)
	p.StreamPageBrand(qw422016)
	qw422016.N().S(` - Import config
`)
}

func (p *AdminImportPage) WritePageTitle(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamPageTitle(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *AdminImportPage) PageTitle() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WritePageTitle(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *AdminImportPage) StreamPageMeta(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
<style>
pre {
    white-space: pre-wrap !important;
}
</style>
`)
}

func (p *AdminImportPage) WritePageMeta(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamPageMeta(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *AdminImportPage) PageMeta() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WritePageMeta(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *AdminImportPage) StreamPageBody(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
<section class="section">
    <div class="container content">
        <h1 class="title has-text-centered">
            Import config
        </h1>

        <div class="columns">
            <div class="column is-8 is-offset-2 has-text-centered">
                <form id="import-form" method="POST" action="/admin/import" autocomplete="off">
                    <div class="field">
                        <div class="control">
                            <textarea id="import-data" class="textarea" placeholder="{}"></textarea>
                        </div>
                    </div>
                    <div class="field">
                        <div class="control">
                            <button class="button is-link">Import</button>
                        </div>
                    </div>
                </form>
                <br>
                <div id="output" class="has-text-left"></div>
            </div>
        </div>
    </div>
</section>
`)
}

func (p *AdminImportPage) WritePageBody(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamPageBody(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *AdminImportPage) PageBody() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WritePageBody(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *AdminImportPage) StreamPageScripts(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
`)
	p.BasePage.StreamPageScripts(qw422016)
	qw422016.N().S(`
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
<script>
$(function() {
    $("#import-form").submit(function(event) {
        event.preventDefault();

        $.ajax({
            type: "POST",
            url: "/admin/import",
            data: $("#import-data").val(),
            contentType: "application/json"
        }).done(function(result) {
            $("#output").prepend($("<pre>").text(result));
        }).fail(function(jqXHR) {
            $("#output").prepend($("<pre>").text(jqXHR.responseText));
        })
    });
});
</script>
`)
}

func (p *AdminImportPage) WritePageScripts(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamPageScripts(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *AdminImportPage) PageScripts() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WritePageScripts(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
