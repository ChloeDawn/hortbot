{% import (
    "github.com/hortbot/hortbot/internal/db/models"
) %}

{% code
type ChannelPage struct {
    BasePage
    Channel *models.Channel
}
%}

{% func (p *ChannelPage) PageTitle() %}
HortBot - {%s p.Channel.Name %}
{% endfunc %}


{% func (p *ChannelPage) PageMeta() %}
<style>
html {
    overflow-y: hidden;
}

.is-sidebar-menu {
    padding: 2.5rem;
    background: #444444;
    width: 20em;
    overflow-y: auto;
    border-right: 1px solid #777777;
    margin-top: 0.75rem;
}

.columns.is-fullheight {
    min-height: calc(100vh - ( 4rem - .75rem ) );
    max-height: calc(100vh - ( 4rem - .75rem ) );
    height: calc(100vh - ( 4rem - .75rem ) );
    display: flex;
    flex-direction: row;
    justify-content: stretch;
    margin-bottom: 0;
}
.columns.is-fullheight .column {
    overflow-y: auto;
}

.is-main-content {
    margin-top: 0.75rem;
    margin-right: 0.75rem;
    padding: 2.5rem;
}

code {
    color: white !important;
}

</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.15.4/themes/bulma/bootstrap-table-bulma.min.css" integrity="sha256-wIjzFXsKHqI7xqvY3UliCZv3gdzpBjZO7CX1M9zpVgk=" crossorigin="anonymous" />
{% endfunc %}

{% func (p *ChannelPage) PageScripts() %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.slim.min.js" integrity="sha256-pasqAKBDmFT4eHoN2ndd6lN370kFiGUFyTiUHWhU7k8=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.15.4/bootstrap-table.min.js" integrity="sha256-zuYwDcub7myT0FRW3/WZI7JefCjyTmBJIoCS7Rb9xQc=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.15.4/themes/bulma/bootstrap-table-bulma.min.js" integrity="sha256-PqveQNlS1aBG/1ezXZfG6a095GB17CSjcC6N+J1+ej8=" crossorigin="anonymous"></script>
{% endfunc %}


{% func isActive(a, b string) %}{% if a == b %}is-active{% endif %}{% endfunc %}

{% func (p *ChannelPage) Sidebar(item string) %}
<div class="is-sidebar-menu">
    <aside class="menu">
        <p class="menu-label">
            General
        </p>
        <ul class="menu-list">
            <li><a href="/c/{%u p.Channel.Name %}" class='{%= isActive(item, "overview") %}'>Overview</a></li>
            <li><a href="/c/{%u p.Channel.Name %}/commands" class='{%= isActive(item, "commands") %}'>Commands</a></li>
            <li><a href="/c/{%u p.Channel.Name %}/quotes" class='{%= isActive(item, "quotes") %}'>Quotes</a></li>
            <li><a href="/c/{%u p.Channel.Name %}/lists" class='{%= isActive(item, "lists") %}'>Lists</a></li>
        </ul>
        <p class="menu-label">
            Settings
        </p>
        <ul class="menu-list">
            <li><a href="/c/{%u p.Channel.Name %}/regulars" class='{%= isActive(item, "regulars") %}'>Regulars</a></li>
            <li><a href="/c/{%u p.Channel.Name %}/rules" class='{%= isActive(item, "rules") %}'>Chat rules</a></li>
        </ul>
    </aside>
</div>
{% endfunc %}

{% func (p *ChannelPage) PageBody() %}
<div class="columns is-fullheight" style="overflow: hidden;">
    {%= p.Sidebar("overview") %}

    <div class="column is-main-content">
        <span class="title is-1">{%s p.Channel.Name %}</span>
        <hr>

        <a class="button is-outlined" href="https://www.twitch.tv/{%u p.Channel.Name %}" target="_blank">
            <span class="icon is-small"><i class="fab fa-twitch"></i></span>
            <span>Twitch</span>
        </a>

        {% if p.Channel.LastFM != "" %}
            <a class="button is-outlined" href="https://www.last.fm/user/{%u p.Channel.LastFM %}" target="_blank">
                <span class="icon is-small"><i class="fab fa-lastfm"></i></span>
                <span>LastFM</span>
            </a>
        {% endif %}

        {% if p.Channel.SteamID != "" %}
            <a class="button is-outlined" href="https://steamcommunity.com/profiles/{%u p.Channel.SteamID %}" target="_blank">
                <span class="icon is-small"><i class="fab fa-steam"></i></span>
                <span>Steam</span>
            </a>
        {% endif %}

        {% if p.Channel.ExtraLifeID != 0 %}
            <a class="button is-outlined" href="https://www.extra-life.org/index.cfm?fuseaction=donorDrive.participant&participantID={%d p.Channel.ExtraLifeID %}" target="_blank">
                <span class="icon is-small"><i class="fas fa-gamepad"></i></span>
                <span>Extra-Life</span>
            </a>
        {% endif %}

        <br>
        <br>

        <p><b>Bot name:</b> <code>{%s p.Channel.BotName %}</code></p>
        <p><b>Command prefix:</b> <code>{%s p.Channel.Prefix %}</code></p>
    </div>
</div>
{% endfunc %}

{% code
type ChannelCommandsPage struct {
    ChannelPage
    Commands models.CustomCommandSlice
}
%}

{% func accessLevel(level string) %}
{% switch level %}
{% case models.AccessLevelEveryone %}
All
{% case models.AccessLevelSubscriber %}
<span class="has-text-success">Subs</span>
{% case models.AccessLevelModerator %}
<span class="has-text-warning">Mods</span>
{% case models.AccessLevelBroadcaster %}
<span class="has-text-danger">Broadcaster</span>
{% case models.AccessLevelAdmin %}
<span class="has-text-info">Admins</span>
{% default %}
Unknown
{% endswitch %}
{% endfunc %}

{% func (p *ChannelCommandsPage) PageBody() %}
<div class="columns is-fullheight" style="overflow: hidden;">
    {%= p.Sidebar("commands") %}

    <div class="column is-main-content">
        <span class="title is-1">{%s p.Channel.Name %}</span><span class="subtitle is-3" style="padding-left: 1rem">Commands</span>
        <hr>

        {% if len(p.Commands) == 0 %}
        <h2>No commands.</h2>
        {% else %}
        <table
            class="table is-striped is-hoverable is-fullwidth"
            data-toggle="table"
            data-sort-class="table-active"
            data-sort-name="command"
            data-search="true"
            data-sortable="true"
        >
            <thead>
                <tr>
                    <th data-sortable="true" data-field="command">Command</th>
                    <th data-sortable="true">Access</th>
                    <th data-sortable="true">Response</th>
                    <th data-sortable="true">Count</th>
                    <th data-sortable="true">Editor</th>
                    <th data-sortable="true">Edited</th>
                </tr>
            </thead>
            <tbody>
                {% for _, c := range p.Commands %}
                <tr>
                    <td><code`>{%s p.Channel.Prefix %}{%s c.R.CommandInfo.Name %}</code></td>
                    <td>{%= accessLevel(c.R.CommandInfo.AccessLevel) %}</td>
                    <td>{%s c.Message %}</td>
                    <td>{%v c.R.CommandInfo.Count %}</td>
                    <td>{%s c.R.CommandInfo.Editor %}</td>
                    <td>{%v c.UpdatedAt %}</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
        {% endif %}

    </div>
</div>
{% endfunc %}

{% code
    type ChannelQuotesPage struct {
        ChannelPage
        Quotes models.QuoteSlice
    }
    %}
    
    {% func (p *ChannelQuotesPage) PageBody() %}
    <div class="columns is-fullheight" style="overflow: hidden;">
        {%= p.Sidebar("quotes") %}
    
        <div class="column is-main-content">
            <span class="title is-1">{%s p.Channel.Name %}</span><span class="subtitle is-3" style="padding-left: 1rem">Quotes</span>
            <hr>
    
            {% if len(p.Quotes) == 0 %}
            <h2>No quotes.</h2>
            {% else %}
            <table
                class="table is-striped is-hoverable is-fullwidth"
                data-toggle="table"
                data-sort-class="table-active"
                data-sort-name="number"
                data-search="true"
                data-sortable="true"
            >
                <thead>
                    <tr>
                        <th data-sortable="true" data-field="number">#</th>
                        <th data-sortable="true">Quote</th>
                        <th data-sortable="true">Editor</th>
                        <th data-sortable="true">Edited</th>
                    </tr>
                </thead>
                <tbody>
                    {% for _, q := range p.Quotes %}
                    <tr>
                        <td>{%d q.Num %}</td>
                        <td>{%s q.Quote %}</td>
                        <td>{%s q.Editor %}</td>
                        <td>{%v q.UpdatedAt %}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
            {% endif %}
    
        </div>
    </div>
    {% endfunc %}
    