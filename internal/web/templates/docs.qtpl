{% code
type DocsPage struct {
    BasePage
}
%}

{% func (p *DocsPage) PageTitle() %}
{%= p.PageBrand() %} - Documentation
{% endfunc %}

{% func (p *DocsPage) PageMeta() %}
{%= p.BasePage.PageMeta() %}
{%= sidebarStyle() %}
<style>
h2.title {
    padding-top: 1rem;
}

dt {
    padding-top: 1rem;
}

dd {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
}

.tag {
    margin-left: 1rem;
    height: 1.5rem !important;
    padding-left: 0.5rem !important;
    padding-right: 0.5rem !important;
}
</style>
{% endfunc %}

{% func (p *DocsPage) PageBody() %}
<div class="columns is-fullheight is-clipped">
    <div class="is-sidebar-menu" id="sidebar">
        <aside class="menu">
            <p class="menu-label">
                General
            </p>
            <ul class="menu-list">
                <li><a href="#commands">Commands</a></li>
            </ul>

            <p class="menu-label">
                Custom commands
            </p>
            <ul class="menu-list">
                <li><a href="#triggers">Triggers</a></li>
                <li><a href="#repeats">Repeats</a></li>
                <li><a href="#schedule">Schedule</a></li>
                <li><a href="#autoreplies">Autoreplies</a></li>
                <li><a href="#lists">Lists</a></li>
            </ul>

            <p class="menu-label">
                Moderation
            </p>
            <ul class="menu-list">
                <li><a href="#shortcuts">Shortcuts</a></li>
                <li><a href="#ignores">Ignores</a></li>
                <li><a href="#user-levels">User levels</a></li>
            </ul>

            <p class="menu-label">
                Fun
            </p>
            <ul class="menu-list">
                <li><a href="#general-fun">General fun</a></li>
                <li><a href="#quotes">Quotes</a></li>
            </ul>

            <p class="menu-label">
                Utilities
            </p>
            <ul class="menu-list">
                <li><a href="#general-utilities">General utilities</a></li>
            </ul>
        </aside>
    </div>

                    
    <div class="column is-main-content content" id="main">
        <h1 class="title">General</h1>

        <section id="commands" class="page">
            <h2 class="title">Commands</h2>

            <dl>
                {%= command("!join", `Tells ` + p.Brand + ` to join your channel. Must be executed in the bot's channel.`, "everyone") %}
                {%= command("!part", `Tells ` + p.Brand + ` to leave your channel.`, "everyone") %}
                {%= command("!bothelp", `Returns a helpful message.`, "everyone") %}
            </dl>
        </section>

        <h1 class="title">Custom commands</h1>

        <section id="triggers" class="page">
            <h2 class="title">Triggers</h2>

            <dl>
                {%= command(
                    "!commands",
                    `Links to the list of commands for the channel.`,
                    "subs",
                ) %}
                {%= command(
                    "!command add <name> <text>",
                    `Creates a command <code>!name</code> that responds with the specified text.`,
                    "mods",
                    `By default, commands are available to subs. Using <code>adda</code> or <code>addm</code> instead of <code>add</code> will pre-restrict the command to all users or moderators, respectively.`,
                    `Example: <code>!command add pan FOUND THE (_PARAMETER_CAPS_), HAVE YE?</code> &mdash; Adds a command called "pan".`,
                    `Example: <code>!command adda useful Here's some useful info: example.org</code> &mdash; Adds a command available to all users immediately.`,
                ) %}
                {%= command(
                    "!command delete <name>",
                    `Deletes a command.`,
                    "mods",
                    `Example: <code>!command delete pan</code> &mdash; Deletes the command called "pan".`,
                ) %}
                {%= command(
                    "!command restrict <name> all|subs|mods|owner",
                    `Restricts a command to a specific group.`,
                    "mods",
                    `Example: <code>!command restrict pan mods</code> &mdash; Restricts "pan" to moderators and above.`,
                ) %}
                {%= command(
                    "!command editor <name>",
                    `Gets the last editor of a command.`,
                    "mods",
                    `Example: <code>!command editor pan</code> &mdash; Gets the last editor of the "pan" command.`,
                ) %}
                {%= command(
                    "!command count <name>",
                    `Gets the number of times a command has been run.`,
                    "mods",
                    `Example: <code>!command count pan</code> &mdash; Gets the number of times the "pan" command have been used.`,
                ) %}
                {%= command(
                    "!command rename <old> <new>",
                    `Renames a command.`,
                    "mods",
                    `Example: <code>!command rename pan oldpan</code> &mdash; Renames the command "pan" to "oldpan".`,
                ) %}
                {%= command(
                    "!command rename <name>",
                    `Gets the response for a command.`,
                    "mods",
                    `Example: <code>!command get pan</code> &mdash; Gets the response for the "pan" command.`,
                ) %}
            </dl>
        </section>

        <section id="repeats" class="page">
            <h2 class="title">Repeats</h2>
            
            <p>
                The repeat command sets up a command repetition. When enabled,
                the bot will repeat every X seconds so long as Y messages have
                passed.
            </p>

            <dl>
                {%= command(
                    "!repeat add <name> <delay in seconds> [message difference]",
                    `Sets a command to repeat, and enables it.`,
                    "mods",
                    `Example: <code>!repeat add discord 300 10</code> &mdash; Sets the command "discord" to repeat every 300 seconds if at least 10 messages have passed.`,
                ) %}
                {%= command(
                    "!repeat delete <name>",
                    `Deletes a command's repeat info.`,
                    "mods",
                    `Example: <code>!repeat delete discord</code> &mdash; Stops repeating the "discord" command and deletes its repeat info.`,
                ) %}
                {%= command(
                    "!repeat on|off <name>",
                    `Enables or disables a command's repetition.`,
                    "mods",
                    `Example: <code>!repeat on discord</code> &mdash; Enables repetition of the "discord" command.`,
                ) %}
                {%= command(
                    "!repeat list",
                    `Lists command repetition info.`,
                    "mods",
                ) %}
            </dl>
        </section>

        <section id="schedule" class="page">
            <h2 class="title">Schedule</h2>

            <p>
                The schedule command sets up a command repetition via a <a href="https://en.wikipedia.org/wiki/Cron" target="_blank">cron expression</a>.
                Like repeated commands, a message difference can be specified.
            </p>

            <dl>
                {%= command(
                    "!schedule add <name> <pattern> [message difference]",
                    `Schedules a command, and enables it.`,
                    "mods",
                    `Example: <code>!schedule add discord *_5_*_*_*</code> &mdash; Schedules the command "discord" to at 5AM every day.`,
                    `Example: <code>!schedule add discord hourly 10</code> &mdash; Schedules the command "discord" to run hourly if at least 10 messages have passed.`,
                ) %}
                {%= command(
                    "!schedule delete <name>",
                    `Deletes a command's schedule.`,
                    "mods",
                    `Example: <code>!schedule delete discord</code> &mdash; Unschedules the "discord" command and deletes its schedule.`,
                ) %}
                {%= command(
                    "!schedule on|off <name>",
                    `Enables or disables a command's repetition.`,
                    "mods",
                    `Example: <code>!schedule on discord</code> &mdash; Enables the schedule of the "discord" command.`,
                ) %}
                {%= command(
                    "!schedule list",
                    `Lists command schedules.`,
                    "mods",
                ) %}
            </dl>
        </section>

        <section id="autoreplies" class="page">
            <h2 class="title">Autoreplies</h2>

            <p>
                Autoreplies are like custom commands, but are run when a message matches a pattern.
            </p>

            <dl>
                {%= command(
                    "!autoreply add <pattern> <response>",
                    `Adds an autoreply which will respond with the provided response when a message matches the pattern.`,
                    "mods",
                    `In the pattern, spaces should be replaced with underscores.`,
                    `Example: <code>!autoreply add *what*game* This is (_GAME_).</code> &mdash; Adds an autoreply that will reply with the current game if a message matches the pattern "*what*game".`,
                    `Example: <code>!autoreply add REGEX:^too_many_[^_]+$ TOO MANY COOKS (_REGULARS_ONLY_)</code> &mdash; Adds an autoreply which uses a raw regex pattern.`,
                ) %}
                {%= command(
                    "!autoreply delete <num>",
                    `Removes an autoreply.`,
                    "mods",
                    `Note that deleting an autoreply that isn't the last does not shift the numbers down. Use <code>!autoreply compact</code> to do this.`,
                ) %}
                {%= command(
                    "!autoreply editresponse <num> <response>",
                    `Edits an autoreply's response.`,
                    "mods",
                ) %}
                {%= command(
                    "!autoreply editpattern <num> <pattern>",
                    `Edits an autoreply's pattern.`,
                    "mods",
                    `In the pattern, spaces should be replaced with underscores.`,
                ) %}
                {%= command(
                    "!autoreply compact <num>",
                    `Compacts autoreplies "num" and higher. This is useful after removing an autoreply in the middle of the list.`,
                    "mods",
                ) %}
                {%= command(
                    "!autoreply list",
                    `Links to the list of autoreplies for the channel.`,
                    "mods",
                ) %}
            </dl>
        </section>

        <section id="lists" class="page">
            <h2 class="title">Lists</h2>

            <p>
                Lists are collections of command-like responses, which can be accessed directly, or via the <code>(_LIST_&lt;name&gt;_RANDOM_)</code> action.
                They may contain command actions themselves, and share the same namespace as custom commands.
            </p>

            <dl>
                {%= command(
                    "!list add <name>",
                    `Adds a list.`,
                    "mods",
                    `By default, lists are available to subs. Using <code>adda</code> or <code>addm</code> instead of <code>add</code> will pre-restrict the list to all users or moderators, respectively.`,
                    `Example: <code>!list add hatspells</code> &mdash; Adds a list called "hatspells".`,
                ) %}
                {%= command(
                    "!list delete <name>",
                    `Removes a list.`,
                    "mods",
                ) %}
                {%= command(
                    "!list restrict <name> all|subs|mods|owner",
                    `Restricts a list.`,
                    "mods",
                ) %}
                {%= command(
                    "!list rename <old> <new>",
                    `Renames a list.`,
                    "mods",
                ) %}
                {%= command(
                    "!<name>",
                    `Gets a random item from the list. Or use <code>!&lt;name&gt; random</code>.`,
                    "varies",
                ) %}
                {%= command(
                    "!<name> add <item>",
                    `Adds an item to the named list.`,
                    "mods",
                    `Example: <code>!hatspells add Solar Eruption</code> &mdash; Adds "Solar Eruption" to the "hatspells" list.`,
                ) %}
                {%= command(
                    "!<name> delete <item>",
                    `Removes an item from the named list.`,
                    "mods",
                    `Example: <code>!hatspells remove Solar Eruption</code> &mdash; Removes "Solar Eruption" from the "hatspells" list.`,
                ) %}
                {%= command(
                    "!<name> restrict",
                    `Same as <code>!list restrict &lt;name&gt;</code>.`,
                    "mods",
                ) %}
                {%= command(
                    "!<name> get <num>",
                    `Gets a specific item from the list.`,
                    "varies",
                ) %}
            </dl>
        </section>

        <h1 class="title">Moderation</h1>

        <section id="shortcuts" class="page">
            <h2 class="title">Shortcuts</h2>

            <dl>
                {%= command("+b <user>", `Bans a user.`, "mods") %}
                {%= command("-b <user>", `Unbans a user.`, "mods") %}
                {%= command("+t <user> [seconds]", `Times out a user (with an optional duration).`, "mods") %}
                {%= command("-t <user>", `Removes a user's timeout.`, "mods") %}
                {%= command("+p <user>", `Purges a user's messages.`, "mods") %}
                {%= command("!permit <user>", `Permits a user to post one link.`, "mods") %}
                {%= command("!clear", `Clears chat.`, "mods") %}
                {%= command("+m", `Turns slow mode on.`, "mods") %}
                {%= command("-m", `Turns slow mode off.`, "mods") %}
                {%= command("+s", `Turns sub only mode on.`, "mods") %}
                {%= command("-s", `Turns sub only mode off.`, "mods") %}
            </dl>
        </section>

        <section id="ignores" class="page">
            <h2 class="title">Ignores</h2>

            <p>
                Ignored users may not use {%= p.PageBrand() %}, but will still be subject to filters.
            </p>

            <dl>
                {%= command("!ignore add <user>", `Adds a user to the ignore list.`, "mods") %}
                {%= command("!ignore delete <user>", `Removes a user from the ignore list.`, "mods") %}
                {%= command("!ignore list", `Lists users in the ignore list.`, "mods") %}
            </dl>
        </section>

        <section id="user-levels" class="page">
            <h2 class="title">User levels</h2>

            <p>
                Custom user levels reclassify users to have different levels. Regulars are equivalent
                to subscribers, owners are equivalent to the channel broadcaster, and mods are mods.
            </p>

            <dl>
                {%= command("!owner|mod|regular list", `Lists users in that group.`, "mods") %}
                {%= command("!owner|mod|regular add|remove <user>", `Adds or removes a user from a group.`, "mods") %}
            </dl>
        </section>

        <h1 class="title">Fun</h1>

        <section id="general-fun" class="page">
            <h2 class="title">General fun</h2>

            <dl>
                {%= command("!conch", `Magic 8 ball.`, "subs") %}
                {%= command("!xkcd <num>", `Gets the requested XKCD comic.`, "subs") %}
                {%= command("!random coin", `Flips a coin.`, "varies") %}
                {%= command("!random <integer>", `Picks a random number.`, "varies") %}
                {%= command("!roll <dice>", `Rolls the specified dice.`, "varies", `Example: <code>!roll 2d20</code> &mdash; Rolls two D20s.`) %}
                {%= command("!google <query>", `Googles something.`, "subs") %}
                {%= command("!link <query>", `Links something.`, "subs") %}
                {%= command("!me <phrase>", `Sends a /me command.`, "mods") %}
                {%= command("!urban <phrase>", `Looks up something in the Urban Dictionary. Be warned, these are not filtered.`, "subs") %}
            </dl>
        </section>

        <section id="quotes" class="page">
            <h2 class="title">Quotes</h2>

            <dl>
                {%= command("!quote", `Gets a random quote.`, "subs") %}
                {%= command(
                    "!quote add <quote>",
                    `Adds a quote.`,
                    "mods",
                    `Example: <code>!quote add "This is a quote!"</code> &mdash; Adds a the quote "This is a quote!".`,
                ) %}
                {%= command(
                    "!quote delete <num>",
                    `Removes a quote.`,
                    "mods",
                    `Note that deleting a quote that isn't the last does not shift the numbers down. Use <code>!quote compact</code> to do this.`,
                ) %}
                {%= command(
                    "!quote get <num>",
                    `Gets a quote.`,
                    "subs",
                ) %}
                {%= command(
                    "!quote random",
                    `Gets a random quote.`,
                    "subs",
                ) %}
                {%= command(
                    "!quote getindex <exact quote>",
                    `Returns the number of the exact quote specified.`,
                    "subs",
                ) %}
                {%= command(
                    "!quote search <phrase>",
                    `Searches all quotes for a phrase.`,
                    "mods",
                ) %}
                {%= command(
                    "!quote compact <num>",
                    `Compacts quotes "num" and higher. This is useful after removing a quote in the middle of the list.`,
                    "mods",
                ) %}
            </dl>
        </section>

        <h1 class="title">Utilities</h1>

        <section id="general-utilities" class="page">
            <h2 class="title">General utilities</h2>

            <dl>
                {%= command("!lastfm", `Links to the channel's LastFM profile.`, "everyone") %}
                {%= command("!music", `Gets the currently playing song.`, "everyone") %}
                {%= command("!songlink", `Gets a link to the currently playing song.`, "everyone") %}
                {%= command("!whatshouldiplay", `Picks a random game from the channel's Steam library.`, "broadcaster") %}
            </dl>
        </section>
    </div>
</div>
{% endfunc %}

{% func (p *DocsPage) PageScripts() %}
{%= p.BasePage.PageScripts() %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.slim.min.js" integrity="sha256-pasqAKBDmFT4eHoN2ndd6lN370kFiGUFyTiUHWhU7k8=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gumshoe/5.1.1/gumshoe.polyfills.min.js" integrity="sha256-nxQlu6aVkhkHICQuYc1Ga85x2MX+FpvJYV1F+O8Awy8=" crossorigin="anonymous"></script>

<script>
$(function() {
    document.addEventListener("gumshoeActivate", function(event) {
        $(event.detail.link).addClass("is-active");
    }, false);
    document.addEventListener("gumshoeDeactivate", function(event) {
        $(event.detail.link).removeClass("is-active");
    }, false);

    var header = document.querySelector("#header");
    spy = new Gumshoe("#sidebar a", {
        navClass: "is-active",
        contentClass: "is-active",
        offset: function() {
            return header.getBoundingClientRect().height;
        },
        events: true
    });

    spy.setup();
    spy.detect();

    $("#main").scroll(function() {
        spy.detect();
    });
});
</script>
{% endfunc %}

{% func command(name, desc, level string, extra ...string) %}
<dt><code>{%s name %}</code></dt>
<dd>
    <p>
        {%s= desc %}
        {%= docLevelTag(level) %}
    </p>
    {% for _, ex := range extra %}
    <p>
        {%s= ex %}
    </p>
    {% endfor %}
</dd>
{% endfunc %}

{% func docLevelTag(level string) %}
{% switch level %}
{% case "everyone" %}
<span class="tag is-light">Everyone</span>
{% case "subs" %}
<span class="tag is-info">Subs</span>
{% case "mods" %}
<span class="tag is-success">Mods</span>
{% case "broadcaster" %}
<span class="tag is-danger">Broadcaster</span>
{% case "admin" %}
<span class="tag is-black">Admins</span>
{% case "varies" %}
<span class="tag is-warning">Varies</span>
{% default %}
{% endswitch %}
{% endfunc %}
